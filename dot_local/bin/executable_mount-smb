#!/bin/zsh

# Mounts a remote SMB share using the credentials stored in the macOS Keychain.

case "$1" in
  -h|--help)
    echo "Usage: "$(basename $0)" <user>@<host>/<dir>" >&2
    echo
    echo "Mounts a remote SMB share using the credentials stored in the macOS Keychain."
    exit 0
    ;;
esac
user=$(echo $1 | cut -d'@' -f1)
host=$(echo $1 | cut -d'@' -f2 | cut -d'/' -f1)
dir=$(echo $1 | cut -d'/' -f2-)
if [ -z "$user" ] || [ -z "$host" ] || [ -z "$dir" ]; then
    echo "Usage: $0 <user>@<host>/<dir>" >&2
    exit 1
fi

urlencode() {
    local str="$1"
    local encoded=""
    local i=0
    local len=${#str}
    while [ $i -lt $len ]; do
        local c=$(echo "$str" | cut -c$((i+1)))
        case "$c" in
            [a-zA-Z0-9.~_-]) encoded+="$c" ;;
            *) encoded+=$(printf '%%%02X' "'$c") ;;
        esac
        i=$((i+1))
    done
    echo "$encoded"
}

mount | grep -qF "//$user@$host/$(urlencode $dir)" && {
    echo "Mount point already exists" >&2
}

target=/Volumes/${dir:t}
i=0
while [ -e $target ]; do
    i=(($i+1))
    target=/Volumes/${dir:t}-$i
done

sudo mkdir $target
sudo chown $USER $target
password=$(security find-internet-password -a $user -s $host -w) || {
    echo "No password found in Keychain for $user@$host" >&2
    sudo rm -rf $target
    exit 1
}
mount_smbfs //$user:$password@$host/$(urlencode $dir) $target || {
    sudo rm -rf $target
}
