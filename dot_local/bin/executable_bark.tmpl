#!/bin/bash

# Documentation: https://bark.day.app/#/en-us/encryption

set -e

parseArgs() {
  local title body copy sound icon url
  local usage="Usage: $0 --title <title> --body <body> [--copy <copy>] [--sound <sound>] [--icon <icon>] [--url <url>]"
  if [[ "$#" -eq 0 ]]; then
    echo $usage >&2
    exit 1
  fi

  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -t|--title)
        title="$2"
        shift 2
        ;;
      -b|--body)
        body="$2"
        shift 2
        ;;
      -c|--copy)
        copy="$2"
        shift 2
        ;;
      -s|--sound)
        sound="$2"
        shift 2
        ;;
      -i|--icon)
        icon="$2"
        shift 2
        ;;
      -u|--url)
        url="$2"
        shift 2
        ;;
      -h|--help)
        echo $usage >&2
        exit 0
        ;;
      # *)
      #   echo "Unknown argument: $1"
      #   return 1
      #   ;;
    esac
  done

  jq -n \
    --arg title "$title" \
    --arg body "$body" \
    --arg copy "${copy:-$body}" \
    --arg sound "$sound" \
    --arg icon "$icon" \
    --arg url "$url" \
    '{title: $title, body: $body, copy: $copy, sound: $sound, icon: $icon, url: $url}'
}

# Example usage:
# notify --title "New Message" --body "You have a new notification!" --sound "ping" --icon "bell.png" --url "https://example.com"

# bark key
deviceKey='{{secret "--service=bark" "--user=deviceKey"}}'

# Must be 32 bit long
key='{{secret "--service=bark" "--user=key"}}'
# IV can be randomly generated, but if it is random, it needs to be passed in the iv parameter.
iv='{{secret "--service=bark" "--user=iv"}}'

# openssl requires Hex encoding of manual keys and IVs, not ASCII encoding.
key=$(printf $key | xxd -ps -c 200)
iv=$(printf $iv | xxd -ps -c 200)

# push payload
json=$(parseArgs "$@")
# If you get a 'Decryption Failed' prompt, try adding '-w 0' after the base64 command.
ciphertext=$(echo -n $json | openssl enc -aes-256-cbc -K $key -iv $iv | base64)

echo $ciphertext

# URL encoding the ciphertext, there may be special characters.
curl -s --data-urlencode "ciphertext=$ciphertext" --data-urlencode "iv=$iv" https://api.day.app/$deviceKey

## Supported parameters ##
# title    : string
# body     : string
# level    : string (active / timeSensitive / passive)
# badge    : int
# autoCopy : bool
# copy     : string
# sound    : string
# icon     : string
# group    : string
# isArchive: bool
# url      : string
