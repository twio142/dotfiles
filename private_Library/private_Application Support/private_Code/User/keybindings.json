[
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+cmd+u",
        "command": "-workbench.action.output.toggleOutput"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "tab",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "cmd+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f4",
        "command": "-references-view.next",
        "when": "reference-list.hasResult && references-view.canNavigate"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "f4",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active && !terminalFocus"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+m",
        "command": "-markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "escape",
        "command": "-workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
    },
    {
        "key": "alt+cmd+v",
        "command": "-extension.pasteImage",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-pasteURL.PasteURL"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+m ctrl+c",
        "command": "-md-shortcut.toggleCodeBlock",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+m ctrl+i",
        "command": "-md-shortcut.toggleInlineCode",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+m",
        "command": "-markdownExtended.toggleMark",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown.extension.togglePreview",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+m ctrl+1",
        "command": "-md-shortcut.toggleNumbers",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+m ctrl+b",
        "command": "-md-shortcut.toggleBullets",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+b",
        "command": "-markdownExtended.toggleBold",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+]",
        "command": "-markdown.extension.onIndentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+[",
        "command": "-markdown.extension.onOutdentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "tab",
        "command": "-markdown.extension.onTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "shift+tab",
        "command": "-markdown.extension.onShiftTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "shift+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+`",
        "command": "-markdownExtended.toggleCodeInline",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+m ctrl+x",
        "command": "-md-shortcut.toggleCheckboxes",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+u",
        "command": "-markdownExtended.toggleUnderLine",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-markdownExtended.toggleSubscript",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-markdownExtended.toggleSuperscript",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+q",
        "command": "-markdownExtended.toggleBlockQuote",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "shift+alt+`",
        "command": "-markdownExtended.toggleCodeBlock",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+m ctrl+m",
        "command": "-md-shortcut.showCommandPalette",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-markdown.extension.editing.toggleHeadingDown",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-markdown.extension.editing.toggleHeadingUp",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "ctrl+b",
        "command": "-md-shortcut.toggleBold",
        "when": "editorTextFocus && markdownShortcuts:enabled"
    },
    {
        "key": "ctrl+l ctrl+u",
        "command": "-markdownExtended.toggleUList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+l ctrl+o",
        "command": "-markdownExtended.toggleOList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+i",
        "command": "-emojisense.quickEmoji",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "-emojisense.quickEmojiTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "alt+escape",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "f1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f5",
        "command": "workbench.action.chat.open"
    },
    {
        "key": "ctrl+right",
        "command": "-extension.vim_ctrl+right",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+left",
        "command": "-extension.vim_ctrl+left",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+up",
        "command": "-extension.vim_ctrl+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+down",
        "command": "-extension.vim_ctrl+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "f5",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "delete",
        "command": "-moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "i",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditorInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "cmd+delete",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && !terminalTextSelected",
        "args": {
            "text": "\u000b"
        }
    },
    {
        "key": "y",
        "command": "copyFilePath",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "q",
        "command": "workbench.action.closeSidebar",
        "when": "((filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot) || openEditorsFocus || focusedView == 'outline') && !inputFocus"
    },
    {
        "key": "cmd+c",
        "command": "copyFilePath",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalProcessSupported && !terminalTextSelected",
        "args": { "text": "\u001b\u0059" }
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalProcessSupported && !terminalTextSelected",
        "args": { "text": "\u0000\u005b" }
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalProcessSupported && !terminalTextSelected",
        "args": { "text": "\u0000\u005d" }
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "openEditorsFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "focusedView == 'outline'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus || panelFocus || auxiliaryBarFocus"
    },
    {
        "key": "f2",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "editorTextFocus || terminalFocus"
    },
    {
        "key": "f4",
        "command": "workbench.action.navigateUp",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "editorTextFocus || terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "editorTextFocus || terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "outline.focus",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "panelFocus"
    },
    {
        "key": "down",
        "command": "-vscode-neovim.send",
        "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "up",
        "command": "-vscode-neovim.send",
        "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+l",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "hasNextTabstop && inSnippetMode && textInputFocus"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f6",
        "command": "-workbench.action.focusNextPart"
    },
    {
        "key": "shift+f6",
        "command": "-workbench.action.focusPreviousPart"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+c",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
    },
    {
        "key": "ctrl+c",
        "command": "notebook.cell.quitEdit",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+space",
        "command": "-workbench.action.terminal.requestCompletions",
        "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
    },
    {
        "key": "escape",
        "command": "vscode-neovim.escape",
        "when": "editorTextFocus && neovim.init && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "escape",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.init && neovim.mode != 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+l",
        "command": "diffEditor.switchSide",
        "when": "editorTextFocus && isInDiffEditor && isInDiffLeftEditor"
    },
    {
        "key": "ctrl+h",
        "command": "diffEditor.switchSide",
        "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor"
    },
    {
        "key": "f3",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "f3",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "f3",
        "command": "-list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'"
    }
]
