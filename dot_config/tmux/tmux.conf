unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# set -g update-environment ""
set-hook -g session-created[10] "run-shell $XDG_CONFIG_HOME/tmux/scripts/on_session_created.sh"

# windows
unbind n
bind n run-shell $XDG_CONFIG_HOME/tmux/scripts/next_window.sh
unbind c
bind c neww -c "$HOME"

# split panes
unbind '"'
bind - splitw -v -l 35% -c "#{pane_current_path}"
unbind %
bind | splitw -h -c "#{pane_current_path}"

# switch panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-h run-shell "$XDG_CONFIG_HOME/tmux/scripts/switch.sh h"
bind -n C-j run-shell "$XDG_CONFIG_HOME/tmux/scripts/switch.sh j"
bind -n C-k run-shell "$XDG_CONFIG_HOME/tmux/scripts/switch.sh k"
bind -n C-l run-shell "$XDG_CONFIG_HOME/tmux/scripts/switch.sh l"

# resize panes
bind -r C-Left resize-pane -L 8
bind -r C-Down resize-pane -D 8
bind -r C-Up resize-pane -U 8
bind -r C-Right resize-pane -R 8

bind x kill-pane # skip confirmation to kill pane
# open new window and open config file in vim
unbind "\~"

set -g default-command "$SHELL"

# set -g default-terminal "screen-256color" # set terminal to 256 colors
set -g display-time 2000 # 2 seconds for display-time
set -g mouse on # enable mouse support
set -g renumber-windows on # renumber windows when a window is closed
set -g base-index 1 # start window numbering at 1
set -g pane-base-index 1 # start pane numbering at 1
# setw -g automatic-rename off # disable auto-rename
# setw -g allow-rename off # disable rename
set -g set-titles on
set -g set-titles-string "#{pane_current_command} ▸ #{b:pane_current_path}" # set title format
set -g escape-time 10 # faster key response

# status bar
set -g status-justify left # left justify status bar
setw -g monitor-activity off # monitor for activity
setw -g monitor-bell on # monitor for bell
set -g visual-activity on
set -g visual-bell off

# copy mode
set -s set-clipboard off # disable system clipboard
setw -g mode-keys vi # vi key bindings in copy mode
bind v copy-mode # enter copy mode
bind C-v copy-mode
bind -n M-v copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection # start selection with v
bind -T copy-mode-vi y send-keys -X copy-selection # copy selection with y
bind -T copy-mode-vi Y send-keys -X copy-selection-and-cancel \; paste-buffer # paste selection with Y
bind -T copy-mode-vi C send-keys -X copy-pipe "pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xargs open"
bind -T copy-mode-vi i send-keys -X cancel # cancel with Escape
bind C-y run-shell "pbpaste | tmux load-buffer -" \; display-message "Loaded buffer" # dump system clipboard into tmux paste buffer
bind -T copy-mode-vi M-Up send-keys -X search-backward "^❯ "
bind -T copy-mode-vi M-Down send-keys -X search-forward "^❯ "
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R

# command alias
set -s command-alias[10] edit-config="neww -n config 'nvim $XDG_CONFIG_HOME/tmux/tmux.conf'"
set -s command-alias[11] EF="neww -n config 'nvim $XDG_CONFIG_HOME/tmux/tmux.conf'"
set -s command-alias[12] ER="source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message 'Reloaded config'"
set -s command-alias[13] tmux-man="run-shell 'man tmux | col -bx | bat -l man -p --color=always'"
set -s command-alias[14] split-copy="run-shell $XDG_CONFIG_HOME/tmux/scripts/split_copy.sh"
set -s command-alias[15] copyw="run-shell $XDG_CONFIG_HOME/tmux/scripts/copy_window.sh"
set -s command-alias[16] copy-window="run-shell $XDG_CONFIG_HOME/tmux/scripts/copy_window.sh"
set -s command-alias[17] man="command-prompt 'splitw -v \"exec man %% | col -bx | bat -l man -p\"'"
set -s command-alias[18] toggle-status="if-shell 'tmux show -q status | grep -q on' 'set status off' 'set status on'"

bind M-h tmux-man
bind C-m man
bind r ER

#### Plugins ####

set -g @plugin 'tmux-plugins/tpm' # tmux plugin manager
set -g @plugin 'tmux-plugins/tmux-sensible' # sensible defaults
set -g @plugin 'tmux-plugins/tmux-resurrect' # save tmux environment
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_LAUNCH_KEY="C-f"
TMUX_FZF_OPTIONS="-p -w 100% -h 15 -x 0% -y 100% -m --layout=reverse --inline-info --color=fg+:-1,bg+:-1,hl:bright-red,hl+:red,pointer:bright-red --pointer=➤"
TMUX_FZF_ORDER="session|window|pane|clipboard|process"
TMUX_FZF_PANE_FORMAT="#{?pane_active,●,-} #{pane_current_command} ▸ #{pane_current_path} #{?pane_marked,󰃀 ,}"
TMUX_FZF_WINDOW_FORMAT="#{?window_active,●,-} #W 􀏝  #{window_panes} #{?window_marked_flag,󰃀 ,}"
TMUX_FZF_SESSION_FORMAT="#{?session_attached,●,-} #S 􀏜  #{session_windows} ▸ #{session_path}"
TMUX_FZF_MENU=\
"edit config\ntmux edit-config\n"\
"tmux manual\ntmux tmux-man\n"\
"confetty\ntmux neww timeout 3s $XDG_DATA_HOME/go/bin/confetty\n"\
"toggle status\ntmux toggle-status\n"

set -g @plugin 'catppuccin/tmux'
if-shell 'test "$(~/bin/background)" = light' 'set -g @catppuccin_flavour "latte"' 'set -g @catppuccin_flavour "frappe"'
# latte, frappe, macchiato or mocha
setw -g window-status-bell-style default
setw -g window-status-activity-style default
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_default_color "#{thm_fg}"
set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_window_current_background ""
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_status_background "default"
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"
set -g @catppuccin_icon_window_activity "􀊆"
set -g @catppuccin_icon_window_bell "󰂞"
set -g @catppuccin_icon_window_last "○"
set -g @catppuccin_icon_window_current "#[fg=#{thm_orange}]●#[fg=default]"
set -g @catppuccin_icon_window_zoom "􀠹 "
#            
set -g @catppuccin_window_right_separator ""
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_status_modules_right "directory git ssh"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_left_separator ""
set -g @catppuccin_status_right_separator "null"
set -g @catppuccin_status_connect_separator "yes"
set -g @catppuccin_session_text "#S "
set -g @catppuccin_directory_text "#{b:pane_current_path} "
set -g @catppuccin_menu_style "bg=default"
set -g @catppuccin_menu_selected_style "fg=#{thm_bg},bg=#{thm_magenta}"

set -g @treemux-tree-nvim-init-file "$XDG_CONFIG_HOME/tmux/custom/treemux_init.lua"
set -g @plugin 'kiyoon/treemux'

set -g @plugin 'laktak/extrakto'
set -g @extrakto_key 'C-e'
set -g @extrakto_clip_tool 'tmux load-buffer -'
set -g @extrakto_copy_key 'ctrl-y'
set -g @extrakto_insert_key 'enter'
set -g @extrakto_split_size "15"
set -g @extrakto_popup_position '0,100'
set -g @extrakto_popup_size '100%,15'
set -g @extrakto_fzf_unset_default_opts "false"
set -g @extrakto_fzf_layout "reverse"
set -g @extrakto_editor "nvim"
set -g @extrakto_filter_order "word all line-trim url"

set -g @plugin 'alexwforsythe/tmux-which-key'

run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
  # 安装插件:
  # 1. 在 ~/.tmux.conf 中增加新的插件，如: set -g @plugin 'user/repo'
  # 2. Prefix I: 自动下载插件，并刷新tmux环境

  # 更新插件:
  # Prefix U: 选择要更新的插件后，回车确认

  # 卸载插件:
  # 1. 在 ~/.tmux.conf 中移除插件所在行
  # 2. Prefix M-u: 移除插件

bind Tab run-shell "$XDG_CONFIG_HOME/tmux/plugins/treemux/scripts/toggle.sh '#{@treemux-key-Bspace}' '#{pane_id}'"

set -g menu-border-line "rounded"
set -g popup-border-style "dim"
set -g popup-border-line "rounded"

unbind C-s
unbind C-r
bind C-r ER
