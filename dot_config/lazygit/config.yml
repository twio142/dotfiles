disableStartupPopups: true
promptToReturnFromSubprocess: false
quitOnTopLevelReturn: true
gui:
  shortTimeFormat: "15:04"
  showBottomLine: false
  nerdFontsVersion: "3"
  showFileIcons: false
  showListFooter: false
  theme:
    activeBorderColor:
      - "#b15c00"
      - "bold"
    inactiveBorderColor:
      - "#4094a3"
    searchingActiveBorderColor:
      - "#b15c00"
      - "bold"
    optionsTextColor:
      - "#2e7de9"
    selectedLineBgColor:
      - underline
    cherryPickedCommitFgColor:
      - "#2e7de9"
    cherryPickedCommitBgColor:
      - "#B1E647"
    markedBaseCommitFgColor:
      - "#2e7de9"
    markedBaseCommitBgColor:
      - "#8c6c3e"
    unstagedChangesColor:
      - "#c64343"
    defaultFgColor:
      - "#5A7BC6"
os:
  # editPreset: "nvim-remote"
  editInTerminal: false
  edit: "$XDG_CONFIG_HOME/lazygit/edit.sh {{filename}}"
  editAtLine: "$XDG_CONFIG_HOME/lazygit/edit.sh {{filename}} +{{line}}"
  copyToClipboardCmd: "echo -n {{text}} | tmux load-buffer -"
  readFromClipboardCmd: "tmux show-buffer"
git:
  paging:
    colorArg: always
    pager: delta --$(~/.local/bin/background) --paging=never --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"
  truncateCopiedCommitHashesTo: 12
  overrideGpg: true
keybinding:
  universal:
    optionMenu: "?"
    optionMenu-alt1: "?"
    openRecentRepos: "<c-g>"
  branches:
    viewGitFlowOptions: <disabled>
customCommands:
  - key: "P"
    context: "remotes"
    command: "git push {{.SelectedRemote.Name}}"
    description: "Push to remote"
  - key: "p"
    context: "remotes"
    command: "git pull {{.SelectedRemote.Name}}"
    description: "Pull from remote"
  - key: "<c-o>"
    context: "remotes"
    command: "git town repo {{.SelectedRemote.Name}}"
    description: "Open remote in browser"
  - key: "<c-y>"
    context: "remotes"
    command: |
      {{range .SelectedRemote.Urls}}
        echo -n {{.}} | tmux load-buffer -
      {{end}}
    description: "Copy remote url"
  - key: "t"
    description: "Git-Town options"
    commandMenu:
      - key: "y"
        description: "Git-Town sync current branch"
        context: "localBranches"
        command: "git-town sync"
        loadingText: "Syncing"
        output: log
      - key: "Y"
        description: "Git-Town sync all"
        command: "git-town sync --all"
        loadingText: "Syncing"
        output: log
      - key: "h"
        context: "localBranches"
        description: "Git-Town hack"
        prompts:
          - type: "input"
            title: "Enter name of new branch (based off 'main')"
            key: "BranchName"
        command: "git-town hack {{.Form.BranchName}}"
        loadingText: "Hacking"
        output: log
      - key: "a"
        description: "Git-Town append branch"
        context: "localBranches"
        prompts:
          - type: "input"
            title: "Enter name of new child branch (based off '{{.CheckedOutBranch.Name}}')"
            key: "BranchName"
        command: "git-town append {{.Form.BranchName}}"
        loadingText: "Appending"
      - key: "A"
        description: "Git-Town prepend branch"
        context: "localBranches"
        prompts:
          - type: "input"
            title: "Enter name of new parent branch (based between '{{.CheckedOutBranch.Name}}' and its parent)"
            key: "BranchName"
        command: "git-town prepend {{.Form.BranchName}}"
        loadingText: "Appending"
        output: log
      - key: "p"
        context: "localBranches"
        description: "Git-Town propose (create a PR)"
        command: "git-town propose"
        loadingText: "Creating pull request"
        output: log
      - key: "s"
        context: "localBranches"
        description: "Git-Town ship (bypass PR)"
        command: "git-town ship -p"
        loadingText: "Shipping"
        output: log
      - key: "d"
        context: "localBranches"
        description: "Git-Town delete (this feature branch and sync)"
        command: "git-town delete"
        prompts:
          - type: "confirm"
            title: "Delete current feature branch"
            body: "Are you sure you want to delete the current feature branch?"
        loadingText: "Deleting Feature Branch"
        output: log
      - key: "u"
        description: "Git-Town undo last command"
        command: "git-town undo"
        prompts:
          - type: "confirm"
            title: "Undo Last Command"
            body: "Are you sure you want to undo the last git-town command?"
        loadingText: "Undoing Git-Town Command"
        output: log
      - key: "c"
        context: "files"
        description: "Git-Town continue (after resolving merge conflicts)"
        command: "git-town continue"
        loadingText: "Continuing"
        output: log
