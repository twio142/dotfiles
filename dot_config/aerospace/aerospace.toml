# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

[exec]
inherit-env-vars = true
[exec.env-vars]
PATH = '${HOME}/.local/bin/:/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.window-title-regex-substring = 'Space \d+'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.objective-see.lulu.app'
run = ['layout floating']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-slash = 'layout tiles horizontal vertical'
# alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# alt-h = 'focus left'
# alt-j = 'focus down'
# alt-k = 'focus up'
# alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
# alt-shift-h = 'move left'
# alt-shift-j = 'move down'
# alt-shift-k = 'move up'
# alt-shift-l = 'move right'

# alt-shift-minus = 'resize smart -50'
# alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
# alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
ctrl-d = ['close-all-windows-but-current', 'mode main']
tab = ['workspace-back-and-forth', 'mode main']
c = ['exec-and-forget aerospace list-workspaces --monitor focused --empty --visible no | aerospace workspace --wrap-around next', 'mode main']
n = ['exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around next', 'mode main']
p = ['exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around prev', 'mode main']
m = ['move-node-to-monitor --wrap-around next', 'mode main']
shift-m = ['move-workspace-to-monitor --wrap-around next', 'mode main']
w = ['mode workspace']
j = ['mode join']
space = ['move-mouse window-lazy-center']

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
slash = ["exec-and-forget altr -w com.nyako520.swift -t aerospace", 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
shift-equal = 'resize smart +50'
equal = 'balance-sizes'

z = ['fullscreen', 'mode main']
f4 = 'macos-native-fullscreen'

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

[mode.join.binding]
h = ['join-with left', 'mode main']
j = ['join-with down', 'mode main']
k = ['join-with up', 'mode main']
l = ['join-with right', 'mode main']

esc = ['reload-config', 'mode main']

[mode.workspace.binding]
tab = ['workspace-back-and-forth', 'mode main']
slash = ["exec-and-forget altr -w com.nyako520.swift -t aerospace", 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
a = ['workspace A', 'mode main']
b = ['workspace B', 'mode main']
c = ['workspace C', 'mode main']
d = ['workspace D', 'mode main']
e = ['workspace E', 'mode main']
f = ['workspace F', 'mode main']
g = ['workspace G', 'mode main']
h = ['workspace H', 'mode main']
i = ['workspace I', 'mode main']
j = ['workspace J', 'mode main']
k = ['workspace K', 'mode main']
m = ['workspace M', 'mode main']
n = ['workspace N', 'mode main']
o = ['workspace O', 'mode main']
p = ['workspace P', 'mode main']
q = ['workspace Q', 'mode main']
r = ['workspace R', 'mode main']
s = ['workspace S', 'mode main']
t = ['workspace T', 'mode main']
u = ['workspace U', 'mode main']
v = ['workspace V', 'mode main']
w = ['workspace W', 'mode main']
x = ['workspace X', 'mode main']
y = ['workspace Y', 'mode main']
z = ['workspace Z', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
shift-a = ['move-node-to-workspace A', 'workspace A', 'mode main']
shift-b = ['move-node-to-workspace B', 'workspace B', 'mode main']
shift-c = ['move-node-to-workspace C', 'workspace C', 'mode main']
shift-d = ['move-node-to-workspace D', 'workspace D', 'mode main']
shift-e = ['move-node-to-workspace E', 'workspace E', 'mode main']
shift-f = ['move-node-to-workspace F', 'workspace F', 'mode main']
shift-g = ['move-node-to-workspace G', 'workspace G', 'mode main']
shift-h = ['move-node-to-workspace H', 'workspace H', 'mode main']
shift-i = ['move-node-to-workspace I', 'workspace I', 'mode main']
shift-j = ['move-node-to-workspace J', 'workspace J', 'mode main']
shift-k = ['move-node-to-workspace K', 'workspace K', 'mode main']
shift-m = ['move-node-to-workspace M', 'workspace M', 'mode main']
shift-n = ['move-node-to-workspace N', 'workspace N', 'mode main']
shift-o = ['move-node-to-workspace O', 'workspace O', 'mode main']
shift-p = ['move-node-to-workspace P', 'workspace P', 'mode main']
shift-q = ['move-node-to-workspace Q', 'workspace Q', 'mode main']
shift-r = ['move-node-to-workspace R', 'workspace R', 'mode main']
shift-s = ['move-node-to-workspace S', 'workspace S', 'mode main']
shift-t = ['move-node-to-workspace T', 'workspace T', 'mode main']
shift-u = ['move-node-to-workspace U', 'workspace U', 'mode main']
shift-v = ['move-node-to-workspace V', 'workspace V', 'mode main']
shift-w = ['move-node-to-workspace W', 'workspace W', 'mode main']
shift-x = ['move-node-to-workspace X', 'workspace X', 'mode main']
shift-y = ['move-node-to-workspace Y', 'workspace Y', 'mode main']
shift-z = ['move-node-to-workspace Z', 'workspace Z', 'mode main']

esc = ['reload-config', 'mode main']
