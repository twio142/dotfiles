# export LANG=en_US.UTF-E
export LC_CTYPE="UTF-8"
export LC_MESSAGES=en_US.UTF-8
export GPG_TTY=$TTY
export POWERLEVEL9K_CONFIG_FILE=~/.config/p10k/p10k.zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ ! -z $TMUX && -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# # If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="$HOME/bin:/usr/local/sbin:$PATH"

# Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"
export ZSH="$XDG_DATA_HOME"/oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=30

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"
CORRECT_IGNORE_FILE="go|.build|.ssh"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"
HISTCONTROL=ignoreboth

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=${XDG_CONFIG_HOME:-~/.config}/omz-custom

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    auto-color-ls
    autojump
    brew
    docker
    git
    git-flow
    gitignore
    npm
    tmux
    vscode
    # zsh-autocomplete
    # zsh-autosuggestions
    F-Sy-H
    # zsh-syntax-highlighting
    )
# !! Keep zsh-syntax-highlighting at the end of the list

source $ZSH/oh-my-zsh.sh
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source $(brew --prefix)/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh
source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme

export ZSH_TMUX_AUTOSTART=true
export ZSH_TMUX_AUTOCONNECT=false
[[ "$TERM_PROGRAM" == "vscode" ]] || export ZSH_TMUX_AUTOQUIT=true

if [[ -z "$TMUX" && -z "$alfred_version" ]]; then
  if [[ -n "$SSH_CONNECTION" ]]; then
    tmux new-session -A -s ssh
  elif [[ "$ITERM_PROFILE" == "Hotkey Window" ]]; then
    tmux new-session -A -s hotkey
  else
    tmux
  fi
fi

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi
export PAGER='bat --style=plain --color=always'

# Compilation flags
export ARCHFLAGS=$(uname -m)

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="$PATH:$(ruby -e 'puts Gem.bindir')"
source $(dirname $(gem which colorls))/tab_complete.sh
alias ls=colorls

# >>> autojump 路径跳转 >>>
# [[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && source ~/.autojump/etc/profile.d/autojump.sh
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh
autoload -U compinit && compinit -u
# <<< autojump <<<

# export PS1='%F{25}%D{%H:%M:%S} %B%n%f%b %# '
# export RPROMPT='%F{25}%1~%f'

export NVM_DIR="$XDG_DATA_HOME"/nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$("$HOME/miniconda3/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
export PATH="$HOME/miniconda3/bin:$PATH"

export DENO_INSTALL="$XDG_CACHE_HOME/deno"
export PATH="$DENO_INSTALL/bin:$PATH"

export PATH="$HOME/Projects/netzwerk/accounting/bin:$PATH"
# . "$HOME/projects/netzwerk/accounting/lib/act_completion"

export PATH=~/.local/bin:$PATH
export PATH="$PATH:$HOME/.local/bin"

export MPLCONFIGDIR="$XDG_CONFIG_HOME"/matplotlib
export LESSHISTFILE="$XDG_STATE_HOME"/less/history
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
# export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export SQLITE_HISTORY="$XDG_CACHE_HOME"/sqlite_history
export GOPATH=$XDG_DATA_HOME/go
export PATH=$PATH:$GOPATH/bin

# To customize prompt, run `p10k configure` or edit $POWERLEVEL9K_CONFIG_FILE.
[[ -f $POWERLEVEL9K_CONFIG_FILE ]] && source $POWERLEVEL9K_CONFIG_FILE

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'
# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'
. ~/.config/fzf/fzf-git.sh

[[ -z $TMUX ]] && test -e "${ZDOTDIR}/.iterm2_shell_integration.zsh" && source "${ZDOTDIR}/.iterm2_shell_integration.zsh"
alias it2api='~/Library/Application\ Support/iTerm2/iterm2env/versions/3.10.4/bin/python3 ~/.iterm2/it2api'

[[ -z $alfred_version ]] && {
  local h=$(date +%H)
  local t=$([[ $h -ge 3 && $h -lt 12 ]] && echo morning || ([[ $h -ge 12 && $h -lt 17 ]] && echo afternoon || echo evening))
  tput setaf 57; echo "\e[1mGood $t, Shin ฅ^•ﻌ•^ฅ\e[0m"; tput sgr0
}

[[ ! -z "$TMUX" && -s "/var/mail/$USER" ]] && echo "  You have mail."

