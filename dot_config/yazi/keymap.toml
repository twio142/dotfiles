# https://github.com/sxyazi/yazi/blob/shipped/yazi-config/preset/keymap-default.toml

[manager]
prepend_keymap = [
  { on = "<Tab>", run = [ "toggle", "arrow next" ], desc = "Toggle selection" },
  { on = "<BackTab>", run = [ "toggle", "arrow prev" ], desc = "Toggle selection" },
  { on = "<A-j>", run = [ "toggle", "arrow next" ], desc = "Toggle selection" },
  { on = "<A-k>", run = [ "toggle --state=off", "arrow prev" ], desc = "Toggle selection" },
  { on = "<A-a>", run = "toggle_all", desc = "Toggle select all" },
  { on = "<A-h>", run = 'shell -- ya emit toggle --state=off "${@: -1}"', desc = "De-select last item" },
  { on = "i", run = "spot", desc = "Inspect file" },
  { on = "e", run = 'shell --block -- nvim "$@"', desc = "Edit file" },
  { on = "<Enter>", run = "plugin my-cmd 'smart enter'", desc = "Open shell / edit file" },
  { on = "<C-t>", run = "plugin my-cmd 'smart open-neww'", desc = "Open in new window" },
  { on = "<S-Enter>", run = "open --interactive", desc = "Open interactively" },
  { on = "?", run = "help", desc = "Open help" },
  { on = "~", run = "cd ~", desc = "Go to home directory" },
  { on = "q", run = "close", desc = "Close current tab, or quit if it is last tab" },
  { on = "Q", run = "quit", desc = "Exit" },
  { on = "<C-d>", run = "seek 5", desc = "Seek down 5 units in preview" },
  { on = "<C-u>", run = "seek -5", desc = "Seek up 5 units in preview" },
  { on = [ "g", "c" ], run = "noop" },
  { on = [ "g", "f" ], run = "noop" },
  { on = [ "g", "a" ], run = [ 'shell -- git add "$@"', "shell --block -- ya emit render" ], desc = "Git add file" },
  { on = [ "g", "A" ], run = [ "shell -- git add --all", "shell --block -- ya emit render" ], desc = "Git add all" },
  { on = [ "g", "u" ], run = [ 'shell -- git restore --staged "$@"', "shell --block -- ya emit render" ], desc = "Git unstage file" },
  { on = [ "g", "o" ], run = "follow", desc = "Go to original" },
  { on = [ "g", "p" ], run = 'shell -- ya emit reveal "$(pbpaste)"', desc = "Go to copied path" },
  { on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go interactively" },
  { on = [ "g", "r" ], run = 'shell -- ya emit cd "$(git rev-parse --show-toplevel)"', desc = "Go to git repo root" },
  { on = [ "g", "d" ], run = 'shell --block -- git diff "$0" | delta --$(background) --navigate --tabs=2 --line-numbers --side-by-side --paging=always --width=$(stty size < /dev/tty | choose 1)  | less -R', desc = "Git diff" },
  { on = [ "y", "c" ], run = "yank", desc = "Copy files" },
  { on = [ "y", "x" ], run = "yank --cut", desc = "Cut files" },
  { on = [ "y", "p" ], run = 'shell -- [ -z $TMUX ] && ya emit copy path || printf "$0" | tmux loadb -', desc = "Yank file path" },
  { on = [ "y", "f" ], run = 'shell -- [ -z $TMUX ] && ya emit copy filename || printf "$(basename "$0")" | tmux loadb -', desc = "Yank filename" },
  { on = "<A-y>", run = 'copy path', desc = "Yank file path" },
  { on = "<Esc>", run = "plugin my-cmd 'smart esc'", desc = "Unyank, exit visual mode, clear selected, or cancel search" },
  { on = "<", run = "back", desc = "Back" },
  { on = ">", run = "forward", desc = "Forward" },
  { on = "J", run = "plugin my-cmd 'smart parent-down'", desc = "Go down in parent dir" },
  { on = "K", run = "plugin my-cmd 'smart parent-up'", desc = "Go up in parent dir" },
  { on = "<C-v>", run = "plugin my-cmd 'smart vsplit'", desc = "Open file in vsplit" },
  { on = "<C-s>", run = "plugin my-cmd 'smart split'", desc = "Open file in split" },
  { on = "<C-e>", run = '''shell --block -- nvim "+lua require('mini.files').open('$0')"''', desc = "Open file explorer" },
  { on = "<C-g>", run = 'shell --block lazygit', desc = "LazyGit" },
  { on = "<C-f>", run = 'arrow 50%', desc = "Move cursor down half page" },
  { on = "<C-b>", run = 'arrow -50%', desc = "Move cursor up half page" },
  { on = "}", run = "plugin my-cmd 'smart create-tab'", desc = "Create new tab" },
  { on = "]", run = "plugin my-cmd 'smart next-tab'", desc = "Switch to next tab" },
  { on = "<C-h>", run = "shell -- [ -z $TMUX ] || tmux selectp -L" },
  { on = "<C-j>", run = "shell -- [ -z $TMUX ] || tmux selectp -D" },
  { on = "<C-k>", run = "shell -- [ -z $TMUX ] || tmux selectp -U" },
  { on = "<C-l>", run = "shell -- [ -z $TMUX ] || tmux selectp -R" },
  { on = [ "w", "u" ], run = "shell --block -- dust -C -w $(stty size < /dev/tty | awk '{print $2}') -n $(stty size < /dev/tty | awk '{print $1 - 2}') . | less -R", desc = "Disk usage" },
  { on = [ "w", "t" ], run = "tasks:show", desc = "Show task manager" },
  { on = [ "w", "m" ], run = "plugin mount", desc = "List mount points" },
  { on = [ "\\", "j" ], run = "plugin my-fzf z",        desc = "Jump to path" },
  { on = [ "\\", "f" ], run = "plugin my-fzf fd",       desc = "Search files" },
  { on = [ "\\", "F" ], run = "search --via=fd --args=--no-ignore-vcs", desc = "Search files" },
  { on = [ "\\", "g" ], run = "plugin my-fzf fif",      desc = "Grep file contents" },
  { on = [ "\\", "o" ], run = "plugin my-fzf obsearch", desc = "Search Obsidian vault" },
  { on = [ "\\", "r" ], run = "plugin my-fzf git",      desc = "Search repos" },
  { on = [ "M", "." ], run = "linemode size_and_mtime", desc = "Linemode: size & mtime" },
  { on = [ "M", "s" ], run = "linemode size",           desc = "Linemode: size" },
  { on = [ "M", "p" ], run = "linemode permissions",    desc = "Linemode: permissions" },
  { on = [ "M", "b" ], run = "linemode btime",          desc = "Linemode: btime" },
  { on = [ "M", "m" ], run = "linemode mtime",          desc = "Linemode: mtime" },
  { on = [ "M", "o" ], run = "linemode owner",          desc = "Linemode: owner" },
  { on = [ "M", "n" ], run = "linemode none",           desc = "Linemode: none" },
  { on = [ "m", "s" ], run = "noop" },
  { on = [ "m", "p" ], run = "noop" },
  { on = [ "m", "b" ], run = "noop" },
  { on = [ "m", "m" ], run = "noop" },
  { on = [ "m", "o" ], run = "noop" },
  { on = [ "m", "n" ], run = "noop" },
  { on = [ "S", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
  { on = [ "S", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
  { on = [ "S", "c" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by created time" },
  { on = [ "S", "C" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by created time (reverse)" },
  { on = [ "S", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
  { on = [ "S", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
  { on = [ "S", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
  { on = [ "S", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
  { on = [ "S", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
  { on = [ "S", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
  { on = [ "S", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
  { on = [ "S", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
  { on = [ "S", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },
  { on = "s", run = "plugin searchjump autocd",            desc = "Searchjump" },
  { on = "/", run = "plugin advanced-search find",         desc = "Find" },
  { on = "f", run = "plugin advanced-search filter",       desc = "Filter" },
  { on = "F", run = "plugin advanced-search smart_filter", desc = "Smart filter" },
  { on = [ "g", "/" ], run = "plugin advanced-search git_changes", desc = "Git changes" },
  { on = "A", run = 'shell -- alfred "$0"', desc = "Show file in Alfred" },
  { on = "=", run = 'shell -- altr -w com.twio142.syspre -t buffer -a - "$@"', desc = "Add file to Alfred buffer" },
  { on = [ "<Space>", "/" ], run = "plugin my-fzf selected", desc = "List selected files" },
  { on = [ "<Space>", "c" ], run = "plugin my-cmd 'on_selection copy'", desc = "Copy here" },
  { on = [ "<Space>", "C" ], run = "plugin my-cmd 'on_selection copy-force'", desc = "Force-copy here" },
  { on = [ "<Space>", "m" ], run = "plugin my-cmd 'on_selection move'", desc = "Move here" },
  { on = [ "<Space>", "M" ], run = "plugin my-cmd 'on_selection move-force'", desc = "Force-move here" },
  { on = [ "<Space>", "n" ], run = "plugin my-cmd 'on_selection move-new-dir'", desc = "Create folder with" },
  { on = [ "<Space>", "N" ], run = "plugin my-cmd 'on_selection copy-new-dir'", desc = "Create folder with (copy)" },
  { on = [ "<Space>", "l" ], run = "plugin my-cmd 'on_selection symlink'", desc = "Symlink here" },
  { on = [ "<Space>", "<C-l>" ], run = "plugin my-cmd 'on_selection relative-symlink'", desc = "Symlink here (relative)" },
  { on = [ "<Space>", "L" ], run = "plugin my-cmd 'on_selection symlink-force'", desc = "Force symlink here" },
  { on = [ "<Space>", "h" ], run = "plugin my-cmd 'on_selection hardlink'", desc = "Hardlink here" },
  { on = [ "<Space>", "<C-h>" ], run = "plugin my-cmd 'on_selection relative-hardlink'", desc = "Hardlink here (relative)" },
  { on = [ "<Space>", "H" ], run = "plugin my-cmd 'on_selection hardlink-force'", desc = "Force hardlink here" },
  { on = [ "<Space>", "d" ], run = "plugin my-cmd 'on_selection delete'", desc = "Delete" },
  { on = [ "<Space>", "e" ], run = "plugin my-cmd 'on_selection edit'", desc = "Edit" },
  { on = [ "<Space>", "r" ], run = "plugin my-cmd 'on_selection rename'", desc = "Rename" },
  { on = [ "<Space>", "<Enter>" ], run = "plugin my-cmd 'on_selection enter'", desc = "Enter" },
  { on = [ "<Space>", ":" ], run = "plugin my-cmd 'on_selection exec'", desc = "Execute" },
  { on = [ "<Space>", "<C-d>" ], run = 'shell --block -- [ $# -eq 2 ] && delta --$(~/.local/bin/background) --navigate --tabs=2 --line-numbers --side-by-side --paging=always --width=$(stty size < /dev/tty | choose 1) "$@" | less -R || true', desc = "Diff" },
  { on = [ "<Space>", "." ], run = 'shell -- ya pub-to 0 select --list "$@"', desc = "Sync" },
  { on = [ "z", "p" ], run = "plugin toggle-pane max-preview", desc = "Zoom preview" },
  { on = [ "z", "o" ], run = "plugin toggle-pane ratio-1,5,0", desc = "Hide preview" },
  { on = [ "z", "z" ], run = "plugin toggle-pane max-current", desc = "Zoom current" },
  { on = [ "t", "a" ], run = "plugin mactag add", desc = "Tag files" },
  { on = [ "t", "d" ], run = "plugin mactag remove", desc = "Untag files" },
  { on = [ "t", "t" ], run = "shell --block -- fzf-tag | while read f; do ya emit reveal \"$f\"; ya emit toggle --state=on; done", desc = "List tagged files" },
  { on = "'", run = "plugin bookmarks jump", desc = "Open bookmark" },
  { on = [ "m", "a" ], run = "plugin bookmarks save", desc = "Save bookmark" },
  { on = [ "m", "d" ], run = "plugin bookmarks delete", desc = "Delete bookmark" },
  { on = [ "m", "c" ], run = "plugin bookmarks modify", desc = "Modify bookmark" },
  { on = [ "m", "." ], run = '''shell -- cache=$XDG_CONFIG_HOME/yazi/plugins/bookmarks.yazi/bookmarkcache; [ -f "$cache" ] && sed -i '' "/^'/d" $cache; [ -d "$0" ] && is_dir=true || is_dir=false; echo "'\t$0\t<temp>\t$is_dir" >> $cache''', desc = "Save a temporary bookmark" },
]

[tasks]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
  { on = "i", run = "inspect", desc = "Inspect the task" },
]

[spot]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
  { on = "i", run = "close", desc = "Close the spot" },
  { on = "<down>", run = "swipe 1", desc = "Swipe to next file" },
  { on = "<up>", run = "swipe -1", desc = "Swipe to previous file" },
  { on = "<C-k>", run = "swipe -1", desc = "Swipe to previous file" },
  { on = "<C-j>", run = "swipe 1", desc = "Swipe to next file" },
  { on = "y", run = "copy cell", desc = "Yank selected cell" },
]

[pick]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
]

[input]
prepend_keymap = [
  { on = "<esc>", run = "close", desc = "Cancel input" },
  { on = "?", run = "help", desc = "Open help" },
  { on = "<down>", run = "mgr:arrow next", desc = "Move cursor down" },
  { on = "<up>", run = "mgr:arrow prev", desc = "Move cursor up" },
  { on = "<C-k>", run = "mgr:arrow prev", desc = "Previous item" },
  { on = "<C-j>", run = "mgr:arrow next", desc = "Next item" },
  { on = "<C-f>", run = [ "mgr:enter", "kill bol", "kill eol" ], desc = "Enter the child directory" },
  { on = "<C-b>", run = [ "mgr:leave", "kill bol", "kill eol" ], desc = "Go back to the parent directory" },
]

[confirm]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
	{ on = "d", run = "close --submit", desc = "Submit the confirm" },
]

[cmp]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
  { on = "<C-k>", run = "arrow prev", desc = "Previous item" },
  { on = "<C-j>", run = "arrow next", desc = "Next item" },
]

[filter]
prepend_keymap = [
  { on = "?", run = "help", desc = "Open help" },
]

[help]
prepend_keymap = [
  { on = "/", run = "filter", desc = "Search for help items" },
]
