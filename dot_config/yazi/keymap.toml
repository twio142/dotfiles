# https://github.com/sxyazi/yazi/blob/shipped/yazi-config/preset/keymap.toml

[manager]
prepend_keymap = [
  # { on = [ "g", "a" ], run = 'my-fev-command1', desc = "Just for test!" },
  { on = "<A-j>", run = [ 'select', 'arrow 1' ], desc = "Toggle selection" },
  { on = "<Tab>", run = [ 'select', 'arrow 1' ], desc = "Toggle selection" },
  { on = "<A-k>", run = [ 'select --state=false' ], desc = "Toggle selection" },
  { on = "<Enter>", run = "plugin my-commands --args='smart enter' --sync", desc = "Open shell / edit file" },
  { on = "<A-Enter>", run = [ 'open --interactive' ], desc = "Open selected files interactively" },
  { on = "?", run = 'help', desc = "Open help" },
  { on = "!", run = 'shell --interactive', desc = "Run a shell command" },
  { on = "~", run = 'cd ~', desc = "Go to the home directory" },
  { on = "q", run = 'close', desc = "Close the current tab, or quit if it is last tab" },
  { on = "Q", run = 'quit', desc = "Exit the process" },
  { on = "<C-d>", run = "seek 5", desc = "Seek down 5 units in the preview" },
  { on = "<C-u>", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = [ "g", "S" ], run = "shell lazygit --confirm --block", desc = "LazyGit" },
  { on = [ "y", "c" ], run = "yank", desc = "Yank selected files (copy)" },
  { on = [ "y", "x" ], run = "yank --cut", desc = "Yank selected files (cut)" },
  { on = [ "y", "p" ], run = "copy path", desc = "Copy the file path" },
  { on = [ "y", "n" ], run = "copy filename", desc = "Copy the filename" },
  { on = "<Esc>", run = "plugin my-commands --args='smart esc' --sync", desc = "Unyank, exit visual mode, clear seleted, or canel search" },
  { on = "j", run = "plugin my-commands --args='smart down' --sync", desc = "Move cursor down" },
  { on = "k", run = "plugin my-commands --args='smart up' --sync", desc = "Move cursor up" },
  { on = "<Down>", run = "plugin my-commands --args='smart down' --sync", desc = "Move cursor down" },
  { on = "<Up>", run = "plugin my-commands --args='smart up' --sync", desc = "Move cursor up" },
  { on = "N", run = "plugin my-commands --args='smart new' --sync", desc = "Go to the previous found / Create a file" },
  { on = [ "\\", "g" ], run = "plugin my-fzf --args=z", desc = "Go to a directory" },
  { on = [ "\\", "f" ], run = "plugin my-fzf --args=fd", desc = "Search files" },
  { on = [ "\\", "s" ], run = "plugin my-fzf --args=fif", desc = "Search file contents" },
  { on = [ "\\", "o" ], run = "plugin my-fzf --args=obsearch", desc = "Search Obsidian vault" },
  { on = [ "\\", "r" ], run = "plugin my-fzf --args=git", desc = "Search repos" },
  { on = [ "s", "m" ], run = [ "sort modified --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
  { on = [ "s", "M" ], run = [ "sort modified --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
  { on = [ "s", "c" ], run = [ "sort created --reverse=no", "linemode ctime" ],  desc = "Sort by created time" },
  { on = [ "s", "C" ], run = [ "sort created --reverse", "linemode ctime" ],     desc = "Sort by created time (reverse)" },
  { on = [ "s", "e" ], run = "sort extension --reverse=no",                      desc = "Sort by extension" },
  { on = [ "s", "E" ], run = "sort extension --reverse",                         desc = "Sort by extension (reverse)" },
  { on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                   desc = "Sort alphabetically" },
  { on = [ "s", "A" ], run = "sort alphabetical --reverse",                      desc = "Sort alphabetically (reverse)" },
  { on = [ "s", "n" ], run = "sort natural --reverse=no",                        desc = "Sort naturally" },
  { on = [ "s", "N" ], run = "sort natural --reverse",                           desc = "Sort naturally (reverse)" },
  { on = [ "s", "s" ], run = [ "sort size --reverse=no", "linemode size" ],      desc = "Sort by size" },
  { on = [ "s", "S" ], run = [ "sort size --reverse", "linemode size" ],         desc = "Sort by size (reverse)" },
  { on = [ "s", "r" ], run = "sort random --reverse=no",                         desc = "Sort randomly" },
  { on = "i", run = 'plugin searchjump --args=autocd', desc = "Searchjump" },
  { on = "I", run = 'plugin keyjump --args=global', desc = "Keyjump global" },
  { on = [ "[", "b" ], run = "back", desc = "Go back to the previous directory" },
  { on = [ "]", "b" ], run = "forward",  desc = "Go forward to the next directory" },
  { on = [ "[", "t" ], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = [ "]", "t" ], run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },
  { on = "F", run = "plugin smart-filter", desc = "Smart filter" },
  { on = "a", run = "plugin my-commands --args=alfred", desc = "Show file in Alfred" },
  { on = "=", run = "plugin my-commands --args='alfred buffer'", desc = "Add file to Alfred buffer" },
  { on = "x", run = "plugin my-commands --args='alfred action'", desc = "Action on file in Alfred" },
  { on = ["<A-l>", "c"], run = "plugin my-commands --args='on_selection copy' --sync", desc = "Copy the yanked files to here" },
  { on = ["<A-l>", "m"], run = "plugin my-commands --args='on_selection move' --sync", desc = "Move the yanked files to here" },
  { on = ["<A-l>", "s"], run = "plugin my-commands --args='on_selection symlink' --sync", desc = "Symlink the yanked files" },
  { on = ["<A-l>", "h"], run = "plugin my-commands --args='on_selection hardlink' --sync", desc = "Hardlink the yanked files" },
  { on = ["<A-l>", "d"], run = "plugin my-commands --args='on_selection delete' --sync", desc = "Delete the yanked files" },
  { on = ["<A-l>", "e"], run = "plugin my-commands --args='on_selection edit' --sync", desc = "Edit the yanked files" },
  { on = ["<A-l>", "r"], run = "plugin my-commands --args='on_selection rename' --sync", desc = "Rename the yanked files" },
  { on = "P", run = "plugin max-preview --sync", desc = "Zoom preview" },
]

[tasks]
prepend_keymap = [
  { on = "?", run = 'help', desc = "Open help" },
]

[select]
prepend_keymap = [
  { on = "?", run = 'help', desc = "Open help" },
]

[input]
prepend_keymap = [
  { on = "<esc>", run = 'close', desc = "cancel input" },
  { on = "?", run = 'help', desc = "Open help" },
]

[confirm]
prepend_keymap = [
  { on = "?", run = 'help', desc = "Open help" },
]

[completion]
prepend_keymap = [
  { on = "?", run = 'help', desc = "Open help" },
]

